x-base-config: &base-config
  networks:
    - uber-network
  deploy:
    resources:
      limits:
        memory: 500m

services:
  postgres:
    <<: *base-config
    image: postgres:16
    container_name: uber-postgres
    environment:
      POSTGRES_DB: "uber_challenge"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "123456"
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d uber_challenge"]
      interval: 10s
      timeout: 5s
      retries: 5

  python-service:
    <<: *base-config
    image: python:latest
    container_name: python-service
    volumes:
      - ./python-scripts:/scripts
      - ./python-models:/scripts/models
    working_dir: /scripts
    command: |
      bash -c "pip install --no-cache-dir pandas numpy catboost && tail -f /dev/null"
    healthcheck:
      test: ["CMD", "python", "--version"]
      interval: 10s
      timeout: 5s
      retries: 3

  uber-insight-server:
    <<: *base-config
    image: michealkrestin/uber_insights:v8
    container_name: uber-insight-server
    depends_on:
      postgres:
        condition: service_healthy
      python-service:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/uber_challenge?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 123456
      APP_JWT_JWT_HEADER: Authorization
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./python-scripts:/python-scripts
      - ./python-models:/python-models
    ports:
      - "8082:8082"

networks:
  uber-network:
    driver: "bridge"